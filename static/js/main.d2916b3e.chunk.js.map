{"version":3,"sources":["components/AutoSuggest.js","components/InfoCard.js","App.js","serviceWorker.js","index.js"],"names":["AutoSuggest","props","className","spellCheck","onFocus","handleFocus","onBlur","handleBlur","onChange","handleChange","value","userValue","warning","onClick","handleButtonClick","data","handleReset","show","map","pokemon","index","key","onMouseDown","handleInputClick","name","InfoCard","src","pokemonData","sprites","front_default","height","abilities","ability","stats","currentStat","stat","base_stat","onDelete","App","state","allPokemon","selectedIndex","pokemonSelected","showList","showWarning","event","capitalise","handleCapitalize","target","setState","findIndex","el","selectedName","a","p","split","capital","charAt","toUpperCase","slice","join","toLowerCase","fetch","url","response","json","info","length","array","found","i","push","handleFocusOne","handleWarning","list","input","e","handleDelete","id","filter","window","location","reload","console","log","results","this","sort","b","localeCompare","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2916b3e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../autoSuggest.css\";\n\nconst AutoSuggest = props => {\n    return (\n        <div className=\"searchlistcontainer\">\n            <input spellCheck=\"false\" onFocus={props.handleFocus} onBlur={props.handleBlur} onChange={props.handleChange} value={props.userValue} />\n            <div className=\"divide\"></div>\n            <div className=\"not-poke\">\n                {props.warning ? <h1 className=\"warning\">NOT A POKEMON! TRY AGAIN!</h1> : null}\n            </div>\n            <button\n                onClick={() => {\n                    props.handleButtonClick(props.data);\n                }}\n            >\n                Search for Pokemon data\n      </button>\n            <div className=\"divide\"></div>\n            <button\n                onClick={() => {\n                    props.handleReset()\n                }}\n            >\n                Reset!\n          </button>\n\n\n            {props.show ? <div className=\"drop-down\">\n                {props.data ? (\n                    props.data.map((pokemon, index) => {\n                        return (\n                            <h3 key={index} onMouseDown={() => props.handleInputClick(pokemon.name, index)}>\n                                {pokemon.name}\n                            </h3>\n                        );\n                    })\n                ) : (\n                        <h1>Loading...</h1>\n                    )}\n            </div> : null}\n        </div>\n    );\n};\n\nexport default AutoSuggest;","import React from \"react\";\nimport \"../infoCard.css\";\n\nconst InfoCard = props => {\n    // console.log(props.pokemonData); <--- uncomment this if you want to see what data you get passed to the props\n    return (\n        <div className=\"card\">\n            <img src={props.pokemonData.sprites.front_default} />\n            <h3>Name: {props.pokemonData.name}</h3>\n            <h3>Height: {props.pokemonData.height}</h3>\n            <h3>Abiltities</h3>\n            {props.pokemonData.abilities.map((ability, index) => {\n                return <p key={index}>{ability.ability.name}</p>;\n            })}\n            <h3>Stats: </h3>\n            {props.pokemonData.stats.map((currentStat, index) => {\n                return (\n                    <p key={index}>\n                        {currentStat.stat.name}: {currentStat.base_stat}\n                    </p>\n                );\n            })}\n            <div>\n                <button onClick={props.onDelete}> REMOVE </button>\n            </div>\n        </div>\n    );\n};\n\nexport default InfoCard;","import React, { Component } from \"react\";\nimport AutoSuggest from \"./components/AutoSuggest\";\nimport InfoCard from \"./components/InfoCard\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    allPokemon: null,\n    userValue: \"\",\n    selectedIndex: null,\n    pokemonSelected: [],\n    showList: false,\n    showWarning: false\n  };\n\n  //this is a React lifecycle method (part of react)\n  //you may want to look it up, and also might want to remind yourself about async/await\n  async componentDidMount() {\n    const response = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=151\");\n    const data = await response.json();\n    console.log(data.results)\n    //  <--- uncomment this to see what data you get from this fetch request\n\n    if (data) {\n      for (let i = 0; i < data.results.length; i++) {\n        data.results[i].name = this.handleCapitalize(data.results[i].name)\n      }\n      data.results.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n    this.setState({ allPokemon: data.results });\n  }\n\n  handleChange = (event) => {\n    let capitalise = this.handleCapitalize(event.target.value)\n    this.setState({\n      userValue: capitalise,\n      selectedIndex: this.state.allPokemon.findIndex((el) => el.name === capitalise)\n    });\n  };\n\n  handleInputClick = async (selectedName, index) => {\n    this.setState({ userValue: selectedName, selectedIndex: index });\n  };\n\n  handleCapitalize = (p) => {\n    let split = p.split(\"\")\n    let capital = p.charAt(0).toUpperCase();\n    let end = split.slice(1).join('').toLowerCase()\n    p = capital + end\n    return p\n  }\n\n  handleButtonClick = async (data) => {\n\n    if (this.state.selectedIndex < 0 || this.state.selectedIndex === null) {\n      this.setState({\n        showWarning: true,\n      })\n    }\n    else {\n      this.setState({ userValue: \"\" })\n      const response = await fetch(data[this.state.selectedIndex].url);\n      const info = await response.json();\n      // console.log(info) <----- uncomment this to see what data you get from this fetch request\n      if (this.state.pokemonSelected.length < 4) {\n\n\n        info.name = this.handleCapitalize(info.name)\n        let array = this.state.pokemonSelected\n        let found = false;\n\n        for (var i = 0; i < array.length; i++) {\n          if (array[i].name === info.name) {\n            found = true;\n            break;\n          }\n        }\n        if (found === true) {\n          return;\n        }\n        else {\n          array.push(info)\n          this.setState({ pokemonSelected: array });\n\n\n\n\n\n        }\n      }\n    }\n  }\n\n\n  handleFocusOne = () => {\n    this.setState({\n      showList: true,\n      showWarning: false\n    })\n  }\n\n  handleWarning = () => {\n    this.setState({\n      showWarning: false,\n      userValue: \"\",\n      showList: true\n    })\n  }\n\n  handleFocus = () => {\n    const list = this.state.allPokemon\n    const input = this.state.userValue\n    for (let i = 0; i < list.length; i++) {\n      if (input === \"\" || input === list[i].name) {\n        this.handleFocusOne()\n      }\n      else if (input !== list[i].name) {\n        this.handleWarning()\n      }\n    }\n  }\n\n\n  handleBlur = (e) => {\n    this.setState({\n      showList: false,\n    })\n  }\n\n\n\n  handleDelete = (id) => {\n    this.setState({\n      pokemonSelected: this.state.pokemonSelected.filter(pokemon => pokemon.id\n        !== id\n      )\n    })\n  }\n\n  handleReset = () => {\n    window.location.reload(false);\n  }\n\n  render() {\n    const { allPokemon, userValue, pokemonSelected, showList, showWarning } = this.state;\n    return (\n      <div className=\"background\">\n        <div className=\"search-wrapper\">\n          <AutoSuggest\n            data={allPokemon}\n            userValue={userValue}\n            show={showList}\n            warning={showWarning}\n            handleFocus={this.handleFocus}\n            handleBlur={this.handleBlur}\n            handleChange={this.handleChange}\n            handleInputClick={this.handleInputClick}\n            handleButtonClick={this.handleButtonClick}\n            handleReset={() => this.handleReset()}\n          />\n        </div>\n        <div className=\"card-container\">\n          {pokemonSelected.map((pokemon) => {\n            return (\n              <div className=\"pokecard\">\n                <InfoCard\n                  pokemonData={pokemon}\n                  key={pokemon.id}\n                  onDelete={() => this.handleDelete(pokemon.id)}\n                  pokemon={pokemon}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}